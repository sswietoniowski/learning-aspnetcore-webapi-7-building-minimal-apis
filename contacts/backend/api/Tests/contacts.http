@baseUri = http://localhost:5000/api
@id = 1
@contactId = 1
@phoneId = 1

### Get all phones for a contact given the contact id
GET {{baseUri}}/contacts/{{contactId}}/phones HTTP/1.1

### Get a phone by id for a contact given the contact id
GET {{baseUri}}/contacts/{{contactId}}/phones/{{phoneId}} HTTP/1.1

### Get all contacts
GET {{baseUri}}/contacts HTTP/1.1

### Get all contacts where lastName is 'Nowak'
GET {{baseUri}}/contacts?lastName=Nowak HTTP/1.1
 
### Get all contacts with name containing 'ski'
GET {{baseUri}}/contacts?search=ski HTTP/1.1

### Get all contacts and sort by lastName descending
GET {{baseUri}}/contacts?orderBy=lastName&desc=true HTTP/1.1

### Get contacts with paging
GET {{baseUri}}/contacts?pageNumber=2&pageSize=1 HTTP/1.1

### Get a contact by id
GET {{baseUri}}/contacts/{{id}} HTTP/1.1

### Create a new contact
POST {{baseUri}}/contacts HTTP/1.1
Content-Type: application/json

{
    "firstName": "John",
    "lastName": "Doe",
    "email": "jdoe@unknown.com"
}

### Update a contact
PUT {{baseUri}}/contacts/{{id}} HTTP/1.1
Content-Type: application/json

{
    "firstName": "Jan",
    "lastName": "Nowak",
    "email": "jkowalski@u.pl"
}

### Delete a contact
DELETE {{baseUri}}/contacts/{{id}} HTTP/1.1

### Call images endpoint to receive an error
GET {{baseUri}}/images HTTP/1.1

### Call images endpoint to receive an error (with Accept header)
GET {{baseUri}}/images HTTP/1.1
Accept: application/json

### Call to non-existing endpoint
GET {{baseUri}}/non-existing HTTP/1.1
Accept: application/json

### Test endpoint filters - update read only contact
PUT {{baseUri}}/contacts/2 HTTP/1.1
Content-Type: application/json

{
    "firstName": "Jan",
    "lastName": "Nowak",
    "email": "jkowalski@u.pl"
}

### Test endpoint filters - delete non-existing contact
DELETE {{baseUri}}/contacts/999 HTTP/1.1

### Test endpoint filters - create contact with invalid email
POST {{baseUri}}/contacts HTTP/1.1
Content-Type: application/json

{
    "firstName": "John",
    "lastName": "Doe",
    "email": "jdoe"
}